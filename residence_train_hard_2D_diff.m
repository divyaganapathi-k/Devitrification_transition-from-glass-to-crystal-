f=phop_all(:,2)>190 & phop_all(:,3)>190 & phop_all(:,2)<3906 & phop_all(:,3)<3906;
phop_all=phop_all(f,:);
pth=0.075;
% a=200;
phop_all=sortrows(phop_all,[5 4]);
phop_all1=[];
phop_all1=phop_all;
% A=accumarray(phop_all(:,5),1);
% f=find(A>10);
% B=ismember(phop_all(:,5),f);
% phop_all1=phop_all(B,:);

% A=accumarray(phop_all1(:,5),1);
% A=nonzeros(A);
% D=horzcat(D,A);
pks=[];
phop_all1(:,6)=smooth(phop_all(:,1),15);
phop_all2=sortrows(phop_all1,[5 -4]);
[~,ia,~]=unique(phop_all2(:,5));
D=phop_all2(ia,[6 4 5]); % end of trajectory
% f=D(:,1)<=0.04;
% D=D(f,:);
[pks(:,1),pks(:,2)]=findpeaks(phop_all1(:,6));
E=horzcat(pks(:,1),phop_all1(pks(:,2),4:5));
f=E(:,1)>pth;
E=E(f,:); % required peaks
F=accumarray(phop_all1(:,5),phop_all1(:,6),[],@max);
f=find(F);
G=horzcat(nonzeros(F),f); % maximum values of the trajectories
[~,ia,ib]=intersect(G,phop_all1(:,[6 5]),'rows');
I=horzcat(G(ia,:),phop_all1(ib,4));
f=I(:,1)>pth;
I=I(f,:);
I=I(:,[1 3 2]);
E=vertcat(E,I,D); %contains all the maximum values possible and trajectory ends
E=unique(E,'rows');
E=sortrows(E,[3 2]);
J=circshift(E,-1);
K=J-E;
f=(K(:,3)==0);
L=horzcat(K(f,2),E(f,:));
L=sortrows(L,-1);
phop_required1=L(1:600,:); %(a+20)
[C,~,ib]=intersect(phop_required1(:,2:4),phop_all1(:,[6 4 5]),'rows');
phop_required=phop_all1(ib,2:5);
[~,ia,ib]=intersect(phop_required,H,'rows');
req_coord_hard=horzcat(R(ib,1:2),phop_required(ia,3:4));
[~,ia,ib]=intersect(req_coord_hard(:,1:3),radial_density(:,1:3),'rows');
req_coord_hard=horzcat(req_coord_hard(ia,:),radial_density(ib,4:end));
req_coord_hard(:,end+1)=-1;
% f=req_coord_hard(:,1)>110 & req_coord_hard(:,2)>110 & req_coord_hard(:,1)<900 & req_coord_hard(:,2)<900;
% req_coord_hard=req_coord_hard(f,:);
% req_coord_hard=req_coord_hard(1:a,:);